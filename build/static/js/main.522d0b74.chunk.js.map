{"version":3,"sources":["components/GiftGrid.js","components/Grids.js","components/Profile.js","components/Home.js","components/NoMatch.js","components/Layout.js","components/Login.js","components/Signup.js","components/GiftGridComplete.js","components/NavigationBar.js","components/Jumbotron.js","components/Logout.js","App.js","serviceWorker.js","index.js","assets/icon.svg","assets/background2.jpg"],"names":["GiftGrid","grid","i","push","Styles","styled","div","Container","className","map","Button","key","amount","Grids","Profile","useState","show","setShow","handleClose","variant","onClick","Modal","onHide","Header","closeButton","Title","Body","Footer","Home","NoMatch","Layout","props","children","Login","username","setUsername","password","setPassword","authentication","setAuthentication","handleLoginClose","backdrop","keyboard","Form","noValidate","validated","Group","controlId","Label","Control","required","type","value","placeholder","onChange","e","target","Feedback","htmlFor","id","aria-describedby","Check","label","axios","get","params","then","catch","err","console","log","Signup","firstName","setFirstName","lastName","setLastName","email","setEmail","setValidate","handleSubmit","post","res","Row","as","Col","Text","muted","feedback","GiftGridComplete","ProgressBar","now","NavigationBar","Navbar","expand","Brand","href","Figure","Image","alt","src","logo","Toggle","aria-controls","Collapse","Nav","defaultActiveKey","NavDropdown","title","Item","Link","background","Jumbotron","fluid","Logout","App","Fragment","exact","path","component","components","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.522d0b74.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Container } from 'react-bootstrap';\nimport styled from 'styled-components';\n\nexport const GiftGrid = () => {\n  let grid = [];\n  let amount = 50;\n  for (let i = 1; i <= amount; i += 1) {\n    grid.push(i);\n  }\n\n  const Styles = styled.div`\n    .btn-light {\n      margin: 0px 0px;\n      height: 70px;\n      width: 90px;\n      border: 1px solid grey;\n      border-radius: 0;\n    }\n\n    .disabled {\n      text-decoration: line-through\n    }\n  `;\n\n  return (\n    <Styles>\n      <Container className='gift-container'>\n        {grid.map(i => {\n          if(i%2 === 0) {\n            return(\n              <Button key={i} className='btn-light'>${i}</Button>\n            )\n          } else {\n            return(\n              <Button key={i} className='btn-light disabled'>${i}</Button>\n            )\n          }\n        })}\n        <br />\n        <h3>${amount*(amount-1) / 2}</h3>\n      </Container>\n    </Styles>\n  )\n}\n\n// export default GiftGrid;","import React from 'react';\nimport styled from 'styled-components';\nimport { Container } from 'react-bootstrap';\nimport { GiftGrid } from './GiftGrid.js';\n\nconst Styles = styled.div`\n\n`;\n\nexport const Grids = () => {\n  return (\n    <Container>\n      <Styles>\n        <GiftGrid />\n      </Styles>\n    </Container>\n  )\n}","import React, { useState } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport styled from 'styled-components';\n\nconst Styles = styled.div`\n  .navbar {\n    background-color: #222;\n  }\n\n  .navbar-brand, .navbar-nav .nav-link {\n    color: #bbb;\n\n    &:hover {\n      color: white;\n    }\n  }\n`;\n\nexport const Profile = () => {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n    <Styles>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Launch demo modal\n      </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Modal heading</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </Styles>\n    </>\n  )\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { Container } from 'react-bootstrap';\n\nconst Styles = styled.div`\n\n`;\n\nexport const Home = () => {\n  return (\n    <Container>\n      <Styles>\n        Home Page\n      </Styles>\n    </Container>\n  )\n}","import React from 'react';\n\nexport const NoMatch = () => (\n  <div>\n    <h1>404: Page not found.</h1>\n    <h3>Please check the address and try again.</h3>\n  </div>\n)","import React from 'react';\nimport Container from 'react-bootstrap/Container';\n\nexport const Layout = (props) => (\n  <Container>\n    {props.children}\n  </Container>\n)","import React, { useState } from 'react';\nimport { Button, Modal, Form } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nconst Styles = styled.div`\n  .navbar {\n    background-color: #222;\n  }\n\n  .navbar-brand, .navbar-nav .nav-link {\n    color: #bbb;\n\n    &:hover {\n      color: white;\n    }\n  }\n`;\n\nexport const Login = (props) => {\n  const [show, setShow] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [authentication, setAuthentication] = useState(false);\n\n  const submitLogin = () => {\n    if (username !== '' && password !== '') {\n      axios.get('http://localhost:5000/user', {\n        params: {\n          username,\n          password\n        }\n      })\n        .then(() => {\n          props.setAuthentication(true);\n          setShow(false);\n          setAuthentication(true);\n        })\n        .catch((err) => {\n          console.log('Error getting user during login', err)\n          setAuthentication(true)\n          setUsername('');\n          setPassword('');\n        });\n    } else {\n      setShow(true);\n      setAuthentication(true);\n    }\n  }\n\n  const handleLoginClose = () => setShow(false);\n  const handleLoginShow = () => setShow(true);\n\n  return (\n    <>\n    <Styles>\n      <Button variant=\"primary\" onClick={handleLoginShow}>\n        Login\n      </Button>\n\n      <Modal show={show} onHide={handleLoginClose} backdrop='static' keyboard={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Welcome back, please sign in.</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form noValidate validated={authentication}>\n            <Form.Group controlId='formBasic'>\n              <Form.Label>Username</Form.Label>\n              <Form.Control\n                required\n                type='username'\n                value={username}\n                placeholder='Enter username'\n                onChange={e => setUsername(e.target.value)}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                Please input a username.\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label htmlFor=\"inputPassword5\">Password</Form.Label>\n              <Form.Control\n                required\n                type='password'\n                placeholder='Password'\n                value={password}\n                id=\"inputPassword5\"\n                aria-describedby=\"passwordHelpBlock\"\n                onChange={e => setPassword(e.target.value)}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                Please input a password.\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n        <Form.Check className='mr-auto' label=\"Remember me\" />\n          <Button variant=\"secondary\" onClick={handleLoginClose}>\n            Cancel\n          </Button>\n          <Button variant=\"primary\" onClick={submitLogin}>\n            Login\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </Styles>\n    </>\n  )\n}","import React, { useState } from 'react';\nimport { Button, Modal, Form, Col } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nconst Styles = styled.div`\n  .navbar {\n    background-color: #222;\n  }\n\n  .navbar-brand, .navbar-nav .nav-link {\n    color: #bbb;\n\n    &:hover {\n      color: white;\n    }\n  }\n`;\n\nexport const Signup = () => {\n  const [show, setShow] = useState(false);\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [validated, setValidate] = useState(false);\n\n  const handleValidation = () => {\n    validated && password !== '' ?\n    handleSubmit():\n    setValidate(true) };\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const handleSubmit = () => {\n    axios.post('http://localhost:5000/adduser',{\n      firstName,\n      lastName,\n      email,\n      username,\n      password,\n    })\n      .then((res) => {\n        console.log(res);\n        setShow(false);\n        setValidate(false);\n      })\n      .catch((err) => console.log('Error on post request', err));\n  }\n\n  return (\n    <>\n    <Styles>\n      <Button variant='primary' onClick={handleShow}>\n        Sign-up\n      </Button>\n\n      <Modal show={show} onHide={handleClose} backdrop='static' keyboard={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>\n            Welcome to the fun!<br />Please fill out the form below to sign-up.\n          </Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form noValidate validated={validated}>\n            <Form.Row>\n              <Form.Group as={Col} controlId='formGridFirstName'>\n                <Form.Label>First Name</Form.Label>\n                <Form.Control\n                  required\n                  type='firstName'\n                  placeholder='First Name'\n                  onChange={(e) => setFirstName(e.target.value)}/>\n              </Form.Group>\n\n              <Form.Group as={Col} controlId='formGridLastName'>\n                <Form.Label>Last Name</Form.Label>\n                <Form.Control\n                  required\n                  type='lastName'\n                  placeholder='Last Name'\n                  onChange={(e) => setLastName(e.target.value)}/>\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Group controlId='formGridEmail'>\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                required\n                type='email'\n                placeholder='Enter email'\n                onChange={(e) => setEmail(e.target.value)}/>\n            </Form.Group>\n\n            <Form.Group controlId='formGridUsername'>\n              <Form.Label>Username</Form.Label>\n              <Form.Control\n                required\n                type='username'\n                placeholder='Username'\n                onChange={(e) => setUsername(e.target.value)}/>\n            </Form.Group>\n\n            <Form.Group controlId='formGridPassword'>\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                required\n                type='password'\n                placeholder='Password'\n                onChange={(e) => setPassword(e.target.value)}/>\n              <Form.Text id=\"passwordHelpBlock\" muted>\n                Your password must be 8-20 characters long, contain letters and numbers, and\n                must not contain spaces, special characters, or emojis.\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group controlId='formGridReEnterPassword'>\n              <Form.Label>Re-enter Password</Form.Label>\n              <Form.Control required type='password' placeholder='Re-enter password' />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Check\n                required\n                label=\"Agree to terms and conditions\"\n                feedback=\"You must agree before submitting.\"\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n        <Form.Text id=\"goToLogin\" className='mr-auto' onClick={handleClose} muted>\n            Already a member? Login.\n          </Form.Text>\n          <Button variant='secondary' onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button variant='primary' onClick={handleValidation}>\n            Sign-up\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </Styles>\n    </>\n  )\n}","import React from 'react';\nimport { ProgressBar } from 'react-bootstrap';\nimport styled from 'styled-components';\n\nconst Styles = styled.div`\n  .gridProgress {\n    width: auto;\n    height: 15px;\n  }\n`;\n\nexport const GiftGridComplete = () => {\n  const now = 60;\n  return (\n    <Styles>\n      <ProgressBar className='gridProgress'>\n        <ProgressBar variant='success' now={now} key={1} />\n        <ProgressBar variant='danger' now={100-now} key={2} />\n      </ProgressBar>\n    </Styles>\n  )\n}\n\n//label={`${100-now}%`}","import React, { useState } from 'react';\nimport { Nav, Navbar, Figure, NavDropdown } from 'react-bootstrap';\nimport { Login } from './Login.js';\nimport { Signup } from './Signup.js';\nimport styled from 'styled-components';\nimport logo from '../assets/icon.svg';\nimport { GiftGridComplete } from './GiftGridComplete.js';\n\nconst Styles = styled.div`\n  .navbar {\n    background-color: #222;\n    vertical-align: middle;\n  }\n\n  .navbar-brand {\n    font-size: 32px;\n    padding: 0 !important;\n  }\n\n  .figure {\n    width: 20px;\n    height: 20px;\n    margin-right: 10px;\n\n    &:hover {\n      fill: white !important;\n    }\n  }\n\n  .navbar-brand, .navbar-nav .nav-link {\n    color: #bbb;\n    vertical-align: middle;\n\n    &:hover {\n      color: white;\n    }\n\n    &:active {\n      color: #bbb,\n    }\n  }\n\n  .nav-item {\n    padding: 0 5px;\n  }\n`;\n\nexport const NavigationBar = (props) => {\n  const [authentication, setAuthentication] = useState(false);\n\n  return (\n    <Styles>\n      <Navbar expand='md'>\n        <Navbar.Brand href='/'>\n          <Figure>\n            <Figure.Image alt='logo' src={logo} />\n          </Figure>\n          Gift Grid\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls='basic-navbar-nav' />\n        <Navbar.Collapse id='navbar-nav'>\n            {/* <Nav.Item><Nav.Link href='/'></Nav.Link></Nav.Item> */}\n            {authentication ?\n            <Nav defaultActiveKey='/' className='ml-auto'>\n              <NavDropdown title='Profile' id='dropdown-button' className='navdropdown'>\n                <Nav.Item><Nav.Link href='/settings'>Settings</Nav.Link></Nav.Item>\n                <Nav.Item><Nav.Link href='/grids'>Grids</Nav.Link></Nav.Item>\n                <Nav.Item><Nav.Link href='/logout'>Logout</Nav.Link></Nav.Item>\n              </NavDropdown>\n            </Nav>\n            :\n            <Nav defaultActiveKey='/' className='ml-auto'>\n              <Nav.Item><Login setAuthentication={setAuthentication}/></Nav.Item>\n              <Nav.Item><Signup /></Nav.Item>\n            </Nav>\n            }\n\n        </Navbar.Collapse>\n      </Navbar>\n      <GiftGridComplete className='align-middle'/>\n    </Styles>\n  )\n}\n","import React from 'react';\nimport { Jumbotron as Jumbo, Container } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport background from '../assets/background2.jpg';\n\nconst Styles = styled.div`\n  .jumbo {\n    background: url(${background}) no-repeat fixed top;\n    background-size: cover;\n    color: #efefef;\n    height: 200px;\n    position: relative;\n    z-index: -2;\n  }\n\n  .overlay {\n    background-color: #444;\n    opacity: 0.6;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    z-index: -1;\n  }\n`;\n\nexport const Jumbotron = () => (\n  <Styles>\n    <Jumbo fluid className='jumbo'>\n      <div className='overlay'></div>\n      <Container>\n        <h1>Make some moneys</h1>\n        <p>Lets gift grid!</p>\n      </Container>\n    </Jumbo>\n  </Styles>\n)","import React from 'react';\nimport { Container } from 'react-bootstrap';\n\nexport const Logout = () => (\n  <Container>\n    You've been logged out. Click here to log back in.\n  </Container>\n)\n\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport { Grids } from './components/Grids.js';\nimport { Profile } from './components/Profile.js';\nimport { Home } from './components/Home.js';\nimport { NoMatch } from './components/NoMatch.js';\nimport { Layout } from './components/Layout.js';\nimport { NavigationBar } from './components/NavigationBar.js';\nimport { Jumbotron } from './components/Jumbotron.js';\nimport { Logout } from './components/Logout.js';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <NavigationBar />\n      <Jumbotron />\n      <Layout>\n        <Router>\n          <Switch>\n            <Route exact path='/' component={Home} />\n            <Route path='/profile' component={Profile} />\n            <Route path='/grids' component={Grids} />\n            <Route path='/logout' components={Logout} />\n            <Route component={NoMatch} />\n          </Switch>\n        </Router>\n      </Layout>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n/* <React.StrictMode>\n <App />\n </React.StrictMode>,\n*/","module.exports = __webpack_public_path__ + \"static/media/icon.3828535d.svg\";","module.exports = __webpack_public_path__ + \"static/media/background2.de7a6483.jpg\";"],"sourceRoot":""}